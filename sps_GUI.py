#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.2
#  in conjunction with Tcl version 8.6
#    May 05, 2020 02:23:23 PM EDT  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import sps_GUI_support
import solver_9 as solver_x
from PIL import ImageTk, Image

def vp_start_gui(test):
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1(test, root)
    sps_GUI_support.init(root, top)
    root.mainloop()


w = None
def create_Toplevel1(rt, test,*args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w,test)
    sps_GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:

    def __init__(self,  test, top=None,):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor   = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor   = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1300x567+596+211")
        top.minsize(1, 1)
        top.maxsize(2000, 1120)
        top.resizable(1, 1)
        top.title("SPS_v2.0")


        self.GUI_cmd = test
        self.imgx_list = self.GUI_cmd.test_gui()

        self.menubar = tk.Menu(top, font="TkMenuFont", bg=_bgcolor, fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Label1_1 = tk.Label(top)
        self.Label1_1.place(relx=0.64, rely=0.070, height=48, width=250)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(text='''<<<<<<<< Synthesized Images >>>>>>>>>''')


        # self.Frame1 = tk.Frame(top)
        # self.Frame1.place(relx=0.067, rely=0.155, relheight=0.434, relwidth=0.325)
        # self.Frame1.configure(relief='groove')
        # self.Frame1.configure(borderwidth="2")
        # self.Frame1.configure(relief="groove")

        self.Canvas1 = tk.Canvas(top)
        self.Canvas1.pack()

        self.Label1_0 = tk.Label(top)
        self.Label1_0.place(relx=0.394, rely=0.75, height=20, width=180)
        self.Label1_0.configure(activebackground="#f9f9f9")
        self.Label1_0.configure(text=''' Click Button Below!! ''')

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.394, rely=0.80, height=76, width=172)
        self.Button1.configure(text='''Generate  Image''')
        self.Button1.configure(activebackground="#a9d9c9")
        self.Button1.configure(command=self.imageCanvas)

        self.Label1_2 = tk.Label(top)
        self.Label1_2.place(relx=0.21, rely=0.088, height=28, width=242)
        self.Label1_2.configure(activebackground="#f9f9f9")
        self.Label1_2.configure(text='''Sketch Image''')

        self.Label1_3 = tk.Label(top)
        self.Label1_3.place(relx=0.04, rely=0.088, height=28, width=120)
        self.Label1_3.configure(activebackground="#f9f9f9")
        self.Label1_3.configure(text='''Real Image''')

    def imageCanvas(self):
        """ Canvas Configuration and Image Selection"""
        a = next(self.imgx_list)
        img = Image.open(a)
        self.image = ImageTk.PhotoImage(img)

        print("Canvas.Caller_________Active")
        self.Canvas1.delete("all")
        self.Canvas1.create_image(0, 0, image=self.image, anchor=tk.NW)
        self.Canvas1.place(relx=0.01, rely=0.155, height=self.image.height(), width=self.image.width())




